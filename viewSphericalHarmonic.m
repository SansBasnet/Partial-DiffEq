function viewSphericalHarmonic(l, m)    %    % ViewSphericalHarmonic(l, m): Program for visualizing the spherical    % harmonics. Note that |m| <= l, and m should be positive. Two graphs are    % produced: the real part of Y_{lm} and the imaginary part.        if (abs(m) > l)                disp('Spherical harmonics have l greater than or equal to |m|.');        return;            end        nt = 180;    np = 360;    [theta, phi] = meshgrid(pi*(0:nt)/nt,pi*(-np:np)/np);    x = sin(theta).*cos(phi);    y = sin(theta).*sin(phi);    z = cos(theta);        V=legendre(l, cos(theta));        sp1 = subplot(1, 2, 1); %#ok<NASGU>    if l == 0        f = ones(size(V));    else        f = squeeze(V(abs(m)+1,:,:)).*cos(m*phi);    end        if max(max(f)) ~= 0                f = f/max(max(f));            end        if m < 0                f = f * (-1)^m;            end        colormap('jet')        surf(x, y, z, f);    caxis([-1 1])        shading interp    set(gca, 'fontsize', 18)    axis equal    xlabel('X');    ylabel('Y');    zlabel('Z');    %     if abs(m) == 1%         title(sprintf('P_{%d}^{%d}(cos(\\theta)) cos(\\phi )', l, m));%     elseif m == 0%         title(sprintf('P_{%d}^{%d}(cos(\\theta))', l, m));%     else%         title(sprintf('P_{%d}^{%d}(cos(\\theta)) cos(%d\\phi )', l, m, abs(m)));%     end        title(sprintf('Real part of Y_{%d}^{%d}(\\theta,\\phi)', l, m))        cb = colorbar;    set(cb, 'fontsize', 18)        sp2 = subplot(1, 2, 2);    if m ~= 0                if l == 0            f = zeros(size(V));        else            f = squeeze(V(abs(m)+1,:,:)).*sin(m*phi);        end                if max(max(f)) ~= 0            f = f/max(max(f));        end                if m < 0                        f = f * (-1)^m;                    end                surf(x,y,z,f);                caxis([-1 1])                shading interp        set(gca, 'fontsize', 18)        axis equal        xlabel('X');        ylabel('Y');        zlabel('Z');        %         if abs(m) == 1%             title(sprintf('P_{%d}^{%d}(cos(\\theta)) sin(\\phi )', l, m));%         else%             title(sprintf('P_{%d}^{%d}(cos(\\theta)) sin(%d\\phi )', l, m, abs(m)));%         end        title(sprintf('Imaginary part of Y_{%d}^{%d}(\\theta,\\phi)', l, m))                cb = colorbar;        set(cb, 'fontsize', 18)            else                delete(sp2)            end    end